package bindings

import (
	"github.com/graniticio/granitic/v2/ioc"
	"github.com/graniticio/granitic/v2/ws/handler"
	"myapp/endpoints/artist"
	"myapp/endpoints/weather"
)

func Components() *ioc.ProtoComponents {
	protoComponents := make([]*ioc.ProtoComponent, 4)

	//weatherHandler
	weatherHandler := new(handler.WsHandler)
	weatherHandlerProto := ioc.CreateProtoComponent(weatherHandler, "weatherHandler")
	protoComponents[0] = weatherHandlerProto

	weatherHandler.PathPattern = "^/weather"
	weatherHandler.HTTPMethod = "GET"

	weatherHandlerProto.AddDependency("Logic", "weatherLogic")


	//artistHandler
	artistHandler := new(handler.WsHandler)
	artistHandlerProto := ioc.CreateProtoComponent(artistHandler, "artistHandler")
	protoComponents[1] = artistHandlerProto

	artistHandler.HTTPMethod = "GET"
	artistHandler.PathPattern = "^/artist"

	artistHandlerProto.AddDependency("Logic", "artistHandlerLogic")


	//artistHandlerLogic
	artistHandlerLogic := new(artist.GetLogic)
	artistHandlerLogicProto := ioc.CreateProtoComponent(artistHandlerLogic, "artistHandlerLogic")
	protoComponents[2] = artistHandlerLogicProto



	//weatherLogic
	weatherLogic := new(weather.GetLogic)
	weatherLogicProto := ioc.CreateProtoComponent(weatherLogic, "weatherLogic")
	protoComponents[3] = weatherLogicProto


	weatherLogicProto.AddConfigPromise("ApiKey", "Service.ApiKey")
	weatherLogicProto.AddConfigPromise("City", "Service.City")


	ser := ""
	frameworkModifiers := make(map[string]map[string]string)

	return ioc.NewProtoComponents(protoComponents, frameworkModifiers, &ser)
}
